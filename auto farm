-- Define variables
local toggleButton = nil
local isLoopRunning = true  -- Initial state is running

-- Function to handle item interaction
local function interactWithItem(item)
    if item:IsA("BasePart") then
        game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(item.Position))
        wait(1)
        
        -- Look downward after teleporting
        local humanoid = game.Players.LocalPlayer.Character.Humanoid
        local rootPart = humanoid.RootPart
        local camera = game.Workspace.CurrentCamera
        
        local rootPosition = rootPart.Position
        local lookAtPosition = rootPosition - Vector3.new(0, 10, 0) -- Adjust the downward offset as needed
        
        camera.CFrame = CFrame.new(camera.CFrame.Position, lookAtPosition)
        
        -- Check for proximity prompt (assuming it's named "ProximityPrompt")
        local proximityPrompt = item:FindFirstChild("ProximityPrompt")
        if proximityPrompt then
            proximityPrompt:InputHoldBegin(Enum.KeyCode.E)
            wait(0.7)
            proximityPrompt:InputHoldEnd(Enum.KeyCode.E)
        end
    end
end

-- Function to check for loot and items
local function checkForLootAndItems()
    local workspace = game:GetService("Workspace")
    local storagesFolder = workspace:FindFirstChild("Storages")

    if storagesFolder then
        while isLoopRunning do  -- Check if the loop should continue
            for _, item in pairs(storagesFolder:GetChildren()) do
                if item:IsA("Model") and item.Name == "Room" then
                    local contentsFolder = item:FindFirstChild("Contents")
                    if contentsFolder then
                        local lootFolder = contentsFolder:FindFirstChild("Loot")
                        if lootFolder then
                            for _, lootItem in pairs(lootFolder:GetChildren()) do
                                interactWithItem(lootItem)
                            end
                        end

                        local itemsFolder = contentsFolder:FindFirstChild("Items")
                        if itemsFolder then
                            for _, itemItem in pairs(itemsFolder:GetChildren()) do
                                interactWithItem(itemItem)
                            end
                        end
                    end
                end
            end
            wait(1)  -- Adjust wait time between checks as needed
        end
    else
        print("Storages folder not found in Workspace.")
    end
end

-- Function to toggle loop on/off
local function toggleLoop()
    isLoopRunning = not isLoopRunning
    if isLoopRunning then
        toggleButton.Text = "Loop: ON"
        checkForLootAndItems()  -- Start loop if toggled on
    else
        toggleButton.Text = "Loop: OFF"
    end
end

-- Create UI button
toggleButton = Instance.new("TextButton")
toggleButton.Parent = game.Players.LocalPlayer.PlayerGui -- Or any UI parent
toggleButton.Position = UDim2.new(0, 10, 0, 10)  -- Top left corner
toggleButton.Size = UDim2.new(0, 120, 0, 30)
toggleButton.Text = "Loop: ON"
toggleButton.MouseButton1Click:Connect(toggleLoop)

-- Check if player's character is already added
if game.Players.LocalPlayer.Character then
    checkForLootAndItems()
end

-- Connect character added event
game.Players.LocalPlayer.CharacterAdded:Connect(checkForLootAndItems)
