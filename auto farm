-- Define a variable to keep track of whether the loop is running
local isLoopRunning = true  -- Default to true (loop is running)

-- Function to handle button click
local function toggleLoop()
    isLoopRunning = not isLoopRunning  -- Toggle the loop state
end

-- Create a UI button (example using TextButton)
local button = Instance.new("TextButton")
button.Text = "Toggle Loop"
button.Position = UDim2.new(0, 10, 0, 10)  -- Position at top left corner
button.Size = UDim2.new(0, 100, 0, 50)  -- Button size
button.Parent = game.Players.LocalPlayer.PlayerGui.ScreenGui  -- Parent to ScreenGui

-- Connect button click event
button.MouseButton1Click:Connect(toggleLoop)

-- Function to interact with items
local function interactWithItem(item)
    if item:IsA("BasePart") then
        game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(item.Position))
        wait(0.1)
        
        -- Look downward after teleporting
        local humanoid = game.Players.LocalPlayer.Character.Humanoid
        local rootPart = humanoid.RootPart
        local camera = game.Workspace.CurrentCamera
        
        local rootPosition = rootPart.Position
        local lookAtPosition = rootPosition - Vector3.new(0, 10, 0) -- Adjust the downward offset as needed
        
        camera.CFrame = CFrame.new(camera.CFrame.Position, lookAtPosition)
        wait(0.1)
        
        -- Check for proximity prompt (assuming it's named "ProximityPrompt")
        local proximityPrompt = item:FindFirstChild("ProximityPrompt")
        if proximityPrompt then
            proximityPrompt:InputHoldBegin(Enum.KeyCode.E)
            wait(0.7)
            proximityPrompt:InputHoldEnd(Enum.KeyCode.E)
        end
    end
end

-- Function to check for loot and items
local function checkForLootAndItems()
    local workspace = game:GetService("Workspace")
    local storagesFolder = workspace:FindFirstChild("Storages")

    if storagesFolder then
        while true do
            -- Check if the loop should continue running
            if isLoopRunning then
                for _, item in pairs(storagesFolder:GetChildren()) do
                    if item:IsA("Model") and item.Name == "Room" then
                        local contentsFolder = item:FindFirstChild("Contents")
                        if contentsFolder then
                            local lootFolder = contentsFolder:FindFirstChild("Loot")
                            if lootFolder then
                                for _, lootItem in pairs(lootFolder:GetChildren()) do
                                    interactWithItem(lootItem)
                                end
                            end

                            local itemsFolder = contentsFolder:FindFirstChild("Items")
                            if itemsFolder then
                                for _, itemItem in pairs(itemsFolder:GetChildren()) do
                                    interactWithItem(itemItem)
                                end
                            end
                        end
                    end
                end
            end
            wait(1)  -- Adjust wait time between checks as needed
        end
    else
        print("Storages folder not found in Workspace.")
    end
end

-- Start the loop when the character is added
game.Players.LocalPlayer.CharacterAdded:Connect(checkForLootAndItems)

-- Initial check when the character is already added
if game.Players.LocalPlayer.Character then
    checkForLootAndItems()
end
